package Rodriguez_Project3Package;
import java.awt.HeadlessException;
//import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author juana
 */
public class Rodriguez_Project3JFrame extends javax.swing.JFrame {
    
    
   // Purpose: type identify if is a movie, painting, or book
    protected String outputItems = "";
    protected String type;
    //private ParentClass_StoreItem[] StoreItemsLoop; 
    // Purpose Array: The purpose of the array is to interract 
    static ArrayList<ParentClass_StoreItem> storeItems = new ArrayList<ParentClass_StoreItem>();
    
    // called from the call back where are add or remove an item 
    // so the total is accurate add logic to just subtrack or add currently
    // added or delete item

   
    /**
     * Creates new form Rodriguez_Project3JFrame
     */
    public Rodriguez_Project3JFrame() {
        initComponents();
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonDeleteEntry = new javax.swing.JButton();
        jButtonAddEntry = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelAskingPrice = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jTextFieldAuthor = new javax.swing.JTextField();
        jTextFieldAskingPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldActors = new javax.swing.JTextField();
        jTextFieldPurchasePrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonBooks = new javax.swing.JButton();
        jButtonPaintings = new javax.swing.JButton();
        jButtonMovies = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldWidth = new javax.swing.JTextField();
        jTextFieldGerne = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldLength = new javax.swing.JTextField();
        jTextFieldDirector = new javax.swing.JTextField();
        jTextFieldActreses = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1TotalMovies = new javax.swing.JLabel();
        jLabelTotalPaintings = new javax.swing.JLabel();
        jLabelTotalBooks = new javax.swing.JLabel();
        jTextFieldMedia = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(113, 151, 188));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonDeleteEntry.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonDeleteEntry.setForeground(new java.awt.Color(0, 0, 153));
        jButtonDeleteEntry.setText("Remove Item");
        jButtonDeleteEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteEntryActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDeleteEntry, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 510, 290, 45));

        jButtonAddEntry.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAddEntry.setText("Add Entry");
        jButtonAddEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEntryActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddEntry, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 167, 62));

        jButtonExit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(204, 0, 0));
        jButtonExit.setText("EXIT");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 580, 290, 46));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Title:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, 35));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Author");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, 35));

        jLabelAskingPrice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabelAskingPrice.setText("Asking Price:");
        jPanel1.add(jLabelAskingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, -1, 35));

        jTextFieldTitle.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 200, 37));

        jTextFieldAuthor.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextFieldAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAuthorActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 200, 37));

        jTextFieldAskingPrice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldAskingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 400, 140, 35));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Actor:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 62, 35));

        jTextFieldActors.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldActors, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 200, 35));

        jTextFieldPurchasePrice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldPurchasePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 137, 35));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Purchased Price:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, 35));

        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 630, 240));

        jButtonBooks.setBackground(new java.awt.Color(51, 51, 51));
        jButtonBooks.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonBooks.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBooks.setText("Books");
        jButtonBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBooksActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBooks, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 167, 40));

        jButtonPaintings.setBackground(new java.awt.Color(0, 0, 0));
        jButtonPaintings.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonPaintings.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPaintings.setText("Paintings");
        jButtonPaintings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPaintingsActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonPaintings, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 167, 40));

        jButtonMovies.setBackground(new java.awt.Color(0, 0, 0));
        jButtonMovies.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonMovies.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMovies.setText("CD Movies");
        jButtonMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoviesActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonMovies, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 167, 40));

        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 36)); // NOI18N
        jLabel4.setText("Book Store Inventory");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 16, -1, 35));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Actres:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 82, 35));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Genre:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, 35));

        jTextFieldWidth.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldWidth, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, 177, 35));

        jTextFieldGerne.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldGerne, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 200, 35));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Lenght:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, -1, 35));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Director:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, 35));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Width:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, -1, 35));

        jTextFieldLength.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldLength, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, 177, 35));

        jTextFieldDirector.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextFieldDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDirectorActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldDirector, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, 200, 35));

        jTextFieldActreses.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldActreses, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 177, 35));

        jPanel2.setBackground(new java.awt.Color(97, 89, 120));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Books :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("  Total");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Paintings:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Movies: ");

        jLabel1TotalMovies.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1TotalMovies.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1TotalMovies.setText("  Total");

        jLabelTotalPaintings.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelTotalPaintings.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTotalPaintings.setText("  Total");

        jLabelTotalBooks.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelTotalBooks.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTotalBooks.setText("  Total");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTotalBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1TotalMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelTotalPaintings, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1TotalMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalPaintings, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, -1, -1));

        jTextFieldMedia.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jPanel1.add(jTextFieldMedia, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 176, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel18.setText("Media:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, -1, 35));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        //
        // Author Name: Juana Rodriguez
        //PurposeButton: Exit the application pressing the exit Button
        System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jTextFieldAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAuthorActionPerformed
        
    }//GEN-LAST:event_jTextFieldAuthorActionPerformed

    private void jButtonAddEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEntryActionPerformed
      
        try
      {
           if (type.equals("Movie"))
           {
               // Purpose : Create a variable and jets the text from jTextFields
               // Author: Juana Rodriguez
               //10/5/2017
               String author = this.jTextFieldAuthor.getText();
               String title = this.jTextFieldTitle.getText();
               Date dateAcquired = Date.from(Instant.now());
               double purchasePrice = Double.parseDouble(this.jTextFieldPurchasePrice.getText());
               double askingPrice = Double.parseDouble(this.jTextFieldAskingPrice.getText());             
               String actor = this.jTextFieldActors.getText();                              
               String actress= this.jTextFieldActreses.getText();              
               String director = this.jTextFieldDirector.getText();
               
               // Purpose: Create a new Obkect
               // Author: Juana Rodriguez
               ChildMovieClass newMovies = new ChildMovieClass(author, title, dateAcquired, purchasePrice,askingPrice,director ,actor, actress);
               
               //Purpose: Adds A new Movie to the ArrayList
               // Author: Juana Rodriguez
               storeItems.add(newMovies);
               // Purpose: Display a JOptionPane alerting the user that he or she entered a new entry
               // Author: Juana Rodriguez
                JOptionPane.showMessageDialog(this, "You entry was added", "New Entry ", JOptionPane.OK_OPTION);
                // Author: Juana Rodriguez
                outputItems = "";
                // Purpose: counts the movies
                // Author: Juana Rodriguez
                int numMovies = ChildMovieClass.getMovieCount();
                // Purpose: Sets the total muvies to the jLabel1TotalMovies
                // Author Juana Rodriguez
                this.jLabel1TotalMovies.setText(String.valueOf(numMovies));
                // Purpose: Set the entries to the jTextArea1
                // Author: JUana Rodriguez
                this.jTextArea1.setText(outputItems);
                // Purpose: counts the movies and lavels all the entries
                int countMovies = 1;        
                // Purpose for: the purpose of this loop is to increase countMovies count
                // interacting with the array list
                // Author Juana Rodriguez
                for(ParentClass_StoreItem newMovie : storeItems)
                {
                    // Create a heading for the number of items in the store
                     outputItems += "----------Store Item  " + countMovies + "------------";
                    outputItems += newMovie.toString();
                    this.jTextArea1.setText(outputItems); 
                    // Increases the count
                    countMovies ++;
                }               
           }           
      }
      catch(HeadlessException | NumberFormatException exception)
           {
            // Purpose: Get a error message
            // AuthorName: Juana Rodriguez
            JOptionPane.showMessageDialog(this, "Enter a valid Input!!", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
           }
           try
            {
            if (type.equals("Book"))
            {
            // Purpose : Create a variable and jets the text from jTextFields
            // Author: Juana Rodriguez
            //10/5/2017
            String author = this.jTextFieldAuthor.getText();
            String title = this.jTextFieldTitle.getText();
            String genre = this.jTextFieldGerne.getText();
            Date dateAcquired = Date.from(Instant.now());
            double purchasePrice = Double.parseDouble(this.jTextFieldPurchasePrice.getText());
            double askingPrice = Double.parseDouble(this.jTextFieldAskingPrice.getText());
                
            // Purpose: Invalidation for miss data or wrong data input
            // Author: Juana Rodriguez
                if(author == null || author.isEmpty())
                {
                    JOptionPane.showMessageDialog(this, "Enter a Author name please ", "Author  ", JOptionPane.OK_OPTION);
                }
                else if(title == null || title.isEmpty())
                {
                    JOptionPane.showMessageDialog(this, "Enter a author name please ", "Author  ", JOptionPane.OK_OPTION);
                }
                else if(genre == null || genre.isEmpty())
                {
                    JOptionPane.showMessageDialog(this, "Enter a genre name please ", "Author  ", JOptionPane.OK_OPTION);
                }
                try
                {
                    purchasePrice = Double.parseDouble(this.jTextFieldPurchasePrice.getText());
                    askingPrice = Double.parseDouble(this.jTextFieldAskingPrice.getText());
                }
                catch(NumberFormatException e)
                {
                    JOptionPane.showMessageDialog(this, "Enter a number  please ", "Number  ", JOptionPane.OK_OPTION);
                }
                
                // Purpose Create a nuw object
                // Author: Juana Rodriguez
                ChildBookClass newBookClass = new ChildBookClass(author,title,dateAcquired ,purchasePrice, askingPrice, genre);
                //Purpose: Adds A new Movie to the ArrayList
               // Author: Juana Rodriguez
                storeItems.add(newBookClass);
                // Purpose: counts the movies
                // Author: Juana Rodriguez
                int numBooks = ChildBookClass.getBookCount();
                // Purpose: Sets the total muvies to the jLabelTotalBooks
                // Author Juana Rodriguez
                this.jLabelTotalBooks.setText(String.valueOf(numBooks));
                
                // Purpose: Display a JOptionPane alerting the user that he or she entered a new entry
               // Author: Juana Rodriguez
                JOptionPane.showMessageDialog(this, "You entry was added", "New Entry ", JOptionPane.OK_OPTION);
           
                outputItems = "";
                // Purpose: counts the movies and lavels all the entries
                int countBooks = 1;
                this.jTextArea1.setText(outputItems);
                // Purpose for: the purpose of this loop is to increase countMovies count
                // interacting with the array list
                // Author Juana Rodriguez
                for(ParentClass_StoreItem newItem : storeItems)
                {
                     // Create a heading for the number of items in the store
                    outputItems += "----------Store Item  " + countBooks + "------------";
                    outputItems += newItem.toString();
                    this.jTextArea1.setText(outputItems); 
                    countBooks ++;                    
                }                                
            }
        }
        catch(Exception e)
           {
            // Purpose: Get a error message
            // AuthorName: Juana Rodriguez
            JOptionPane.showMessageDialog(this, "Enter a valid Input pressed the BOOK Button Again to desable the filds!!", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
           }
    if (type.equals("Painting"))
    {
        try
        {
            // Purpose : Create a variable and jets the text from jTextFields
            // Author: Juana Rodriguez
            //10/5/2017
            double purchasePrice = Double.parseDouble(this.jTextFieldPurchasePrice.getText());
            double askingPrice = Double.parseDouble(this.jTextFieldAskingPrice.getText());
            Date dateAcquired = Date.from(Instant.now());
            String author = this.jTextFieldAuthor.getText();
            String title = this.jTextFieldTitle.getText();
            String media = this.jTextFieldMedia.getText();
            int width = Integer.parseInt(this.jTextFieldWidth.getText());
            int height = Integer.parseInt(this.jTextFieldLength.getText());
             // Purpose: Creates a new Object
             // Author: Juana Rodriguez
            ChildPaintingClass paintingClass = new ChildPaintingClass(author, title, dateAcquired , purchasePrice, askingPrice, width, height, media);
            // Purpose: Adds a item to the array
            //Author Name: Juana Rodriguez
            // Date: 10/03/2017
            storeItems.add(paintingClass);                                           
            int numPaintings = ChildPaintingClass.getPaintCounrt();
            this.jLabelTotalPaintings.setText(String.valueOf(numPaintings));
                    
            // Purpose: Display a JOptionPane alerting the user that he or she entered a new entry
               // Author: Juana Rodriguez         
            JOptionPane.showMessageDialog(this, "You entry was added", "New Entry ", JOptionPane.OK_OPTION);
           
            outputItems = "";
             // Purpose for: the purpose of this loop is to increase countMovies count
                // interacting with the array list
                // Author Juana Rodriguez                          
            this.jTextArea1.setText(outputItems);
            int counter =1;
            for(ParentClass_StoreItem newItem : storeItems)
            {
                outputItems += "----------Store Item " + counter + "------------";
                outputItems += newItem.toString();
                this.jTextArea1.setText(outputItems); 
                counter++;                                          
            }                                                     
        }
            catch (Exception e)
            {
                // Purpose: Get a error message
                // AuthorName: Juana Rodriguez                 
                JOptionPane.showMessageDialog(this, "Enter a valid Input!!", "Error", JOptionPane.ERROR_MESSAGE);                   
                return;  
            }              
        }    
            // Purpose: Cleans the fields so the user ca enter a new entry
           this.jTextFieldActors.setText("");
           this.jTextFieldAuthor.setText("");
           this.jTextFieldTitle.setText("");
           this.jTextFieldPurchasePrice.setText("");
           this.jTextFieldAskingPrice.setText("");           
           this.jTextFieldActreses.setText("");
           this.jTextFieldDirector.setText("");
           this.jTextFieldGerne.setText("");           
           this.jTextFieldMedia.setText("");
           this.jTextFieldLength.setText("");
           this.jTextFieldWidth.setText("");
           
    }//GEN-LAST:event_jButtonAddEntryActionPerformed

    private void jButtonDeleteEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteEntryActionPerformed
        int arraySize = storeItems.size();
        //
        try
        {
            //Purpose: Removies a item from the ArrayList
            
            String numberInput = JOptionPane.showInputDialog("Enter the number of the item you want to remove fom the list: ");
            //Purpose: test if the entries are less than 0 and greater than 0
            // Date: 10/05/2017
            if(arraySize > 0 && (Integer.parseInt(numberInput) > 0))
            {
                
                
                // Decrease the number by 1
                
                if (type.equals("Painting"))
                {
                    arraySize = ChildPaintingClass.remove();
                    this.jLabelTotalPaintings.setText(String.valueOf(arraySize));
                    storeItems.remove(Integer.parseInt(numberInput) - 1);
                }
                if (type.equals("Book"))
                {
                    arraySize = ChildBookClass.remove();
                    this.jLabelTotalBooks.setText(String.valueOf(arraySize));
                    storeItems.remove(Integer.parseInt(numberInput) - 1);
                }
                if (type.equals("Movie"))
                {
                    arraySize = ChildMovieClass.remove();
                    this.jLabel1TotalMovies.setText(String.valueOf(arraySize));
                    storeItems.remove(Integer.parseInt(numberInput) - 1);
                }
                outputItems = "";
                int counter = 1;
            
                this.jTextArea1.setText(outputItems);
                // Refresh the  list of items
                for (ParentClass_StoreItem item : storeItems)
                {
              
                    outputItems +=  "----------Store Item " + counter + "------------";
                    outputItems += item.toString();
                    this.jTextArea1.setText(outputItems);
                    counter++;
                }
            // Purpose: Display a message 
            // Author: Juana Rodriguez
            JOptionPane.showMessageDialog(this, "You entry was Removed", "Remove Entry ", JOptionPane.OK_OPTION);                        
            }
            else
            {
                 // Purpose: Message display
                JOptionPane.showMessageDialog(this, "No more Items to remove", "There is no more Entry ", JOptionPane.OK_OPTION);            
                this.jButtonDeleteEntry.setEnabled(false);
            }
            
        }
        catch (Exception e)
        {
                    // Purpose: Message display
                    JOptionPane.showMessageDialog(this, "The number you enter Don not mach the size of the list"
                            + " Please enter a valid number", "Wrong Number ", JOptionPane.OK_OPTION);
                  
                   
        }
            
            
    }//GEN-LAST:event_jButtonDeleteEntryActionPerformed

    private void jButtonBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBooksActionPerformed
        // Purpose; Enabled the fiels if the user press the Book Button
        type = "Book";
        this.jTextFieldGerne.setEnabled(true);
        this.jTextFieldAskingPrice.setEnabled(true);
        this.jTextFieldAuthor.setEnabled(true);       
        this.jTextFieldPurchasePrice.setEnabled(true);
        this.jTextFieldTitle.setEnabled(true);
                    
    }//GEN-LAST:event_jButtonBooksActionPerformed

    private void jButtonPaintingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPaintingsActionPerformed
        // Purpose; Enabled the fiels if the user press the Painting Button
        type = "Painting";
        this.jTextFieldAskingPrice.setEnabled(true);
        this.jTextFieldAuthor.setEnabled(true);       
        this.jTextFieldPurchasePrice.setEnabled(true);
        this.jTextFieldLength.setEnabled(true);    
        this.jTextFieldTitle.setEnabled(true);
        this.jTextFieldWidth.setEnabled(true);
        this.jTextFieldMedia.setEnabled(true);
    }//GEN-LAST:event_jButtonPaintingsActionPerformed

    private void jButtonMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoviesActionPerformed
        // Purpose; Enabled the fiels if the user press the Movies Button
        type = "Movie";
        this.jTextFieldActors.setEnabled(true);
        this.jTextFieldActreses.setEnabled(true);
        this.jTextFieldAskingPrice.setEnabled(true);
        this.jTextFieldAuthor.setEnabled(true);     
        this.jTextFieldPurchasePrice.setEnabled(true);
        this.jTextFieldDirector.setEnabled(true);
        this.jTextFieldTitle.setEnabled(true);
    }//GEN-LAST:event_jButtonMoviesActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Purpose; Enabled false so the user do not have the abilisty to enter text
        // before selecting a button
        this.jTextFieldActors.setEnabled(false);
        this.jTextFieldActreses.setEnabled(false);
        this.jTextFieldAskingPrice.setEnabled(false);
        this.jTextFieldAuthor.setEnabled(false);
        this.jTextFieldMedia.setEnabled(false);
        this.jTextFieldGerne.setEnabled(false);
        this.jTextFieldLength.setEnabled(false);
        this.jTextFieldDirector.setEnabled(false);
        this.jTextFieldPurchasePrice.setEnabled(false);
        this.jTextFieldTitle.setEnabled(false);
        this.jTextFieldWidth.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void jTextFieldDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDirectorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rodriguez_Project3JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rodriguez_Project3JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rodriguez_Project3JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rodriguez_Project3JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rodriguez_Project3JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddEntry;
    private javax.swing.JButton jButtonBooks;
    private javax.swing.JButton jButtonDeleteEntry;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonMovies;
    private javax.swing.JButton jButtonPaintings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel1TotalMovies;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAskingPrice;
    private javax.swing.JLabel jLabelTotalBooks;
    private javax.swing.JLabel jLabelTotalPaintings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldActors;
    private javax.swing.JTextField jTextFieldActreses;
    private javax.swing.JTextField jTextFieldAskingPrice;
    private javax.swing.JTextField jTextFieldAuthor;
    private javax.swing.JTextField jTextFieldDirector;
    private javax.swing.JTextField jTextFieldGerne;
    private javax.swing.JTextField jTextFieldLength;
    private javax.swing.JTextField jTextFieldMedia;
    private javax.swing.JTextField jTextFieldPurchasePrice;
    private javax.swing.JTextField jTextFieldTitle;
    private javax.swing.JTextField jTextFieldWidth;
    // End of variables declaration//GEN-END:variables
}
